package com.acs560.dataanalyzer.views.ecomsalesdata;

import com.acs560.dataanalyzer.models.EcomSalesData;
import com.acs560.dataanalyzer.services.EcomSalesDataService;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.data.binder.Binder;
import com.vaadin.flow.data.binder.ValidationException;

public class EcomSalesDataForm extends FormLayout {

    private TextField orderId = new TextField("Order ID");
    private TextField amount = new TextField("Amount");
    private TextField shipCity = new TextField("Ship City");

    private Button save = new Button("Save");
    private Button delete = new Button("Delete");
    private Button cancel = new Button("Cancel");

    private Binder<EcomSalesData> binder = new Binder<>(EcomSalesData.class);
    private EcomSalesDataService service;
    private EcomSalesData ecomSalesData;

    public EcomSalesDataForm(EcomSalesDataService service) {
        this.service = service;

        // Bind form fields to EcomSalesData class
        binder.bindInstanceFields(this);

        // Add form components
        HorizontalLayout buttons = new HorizontalLayout(save, delete, cancel);
        add(orderId, amount, shipCity, buttons);

        // Set button actions
        save.addClickListener(e -> saveEcomSalesData());
        delete.addClickListener(e -> deleteEcomSalesData());
        cancel.addClickListener(e -> setEcomSalesData(null));
    }

    public void setEcomSalesData(EcomSalesData ecomSalesData) {
        this.ecomSalesData = ecomSalesData;
        binder.readBean(ecomSalesData);
    }

    private void saveEcomSalesData() {
        try {
            binder.writeBean(ecomSalesData);
            service.addSalesData(ecomSalesData); // Save to the service
            Notification.show("Sales data saved");
        } catch (ValidationException e) {
            Notification.show("Unable to save sales data");
        }
    }

    private void deleteEcomSalesData() {
        if (ecomSalesData != null) {
            service.delete(ecomSalesData);
            Notification.show("Sales data deleted");
        }
    }
}
